"use strict";angular.module("woozle",["restangular"]),angular.module("woozle").controller("WoozleLoginController",["$rootScope","$scope","$location","$window","WoozleAuthenticationService","WoozleMandatorSelectionService","WoozleLoginContextService",function($rootScope,$scope,$location,$window,AuthenticationService,MandatorSelectionService,LoginContextService){$scope.rememberme=!0,$scope.showProgress=!1,$scope.login=function(){$scope.showProgress=!0;var user={username:$("#username").val(),password:$("#password").val()};console.log("Try to login"),console.log(user),AuthenticationService.login(user,function(){console.log("Login was successful"),null!=$scope.mandator?$scope.selectMandator():LoginContextService.getLoginContext(function(loginContext){LoginContextService.setLoginData(loginContext.User,loginContext.Mandator),$location.path("/main")},function(error){601==error.status?MandatorSelectionService.getAssignedMandators(function(mandators){console.log("getting assigned mandators."),console.log(mandators),$scope.mandators=mandators,$scope.mandator=mandators[0],$scope.showProgress=!1},function(error){console.log("error at getting mandators"),console.log(error)}):403==error.status?$scope.openLoginErrorAlert("Sie verfügen über zu wenig Berechtigungen, um sich am TIA Backend anzumelden."):(console.log(error),$scope.openLoginErrorAlert("Sie konnten nicht angemeldet werden."))})},function(error){console.log(error),$scope.openLoginErrorAlert("Der eingegebene Benutzername und/oder das Passwort ist ungültig. Sie konnten nicht angemeldet werden.")})},$scope.selectMandator=function(){MandatorSelectionService.selectMandator($scope.mandator,function(){LoginContextService.getLoginContext(function(loginContext){LoginContextService.setLoginData(loginContext.User,loginContext.Mandator),console.log("mandator "+$scope.mandator.Name+" selected."),$location.path("/main")},function(){})},function(error){console.log("error @ mandator selection."),console.log(error)})},$scope.showMandatorSelection=function(){var show=!1;return null!=$scope.mandators&&(show=!0),show},$scope.openLoginErrorAlert=function(){}}]),angular.module("woozle").controller("WoozleNavigationController",["$scope","WoozleLoginContextService","WoozleNavigationService",function($scope,LoginContextService,NavigationService){$scope.oneAtATime=!0,$scope.showNavigation=!1,$scope.loggedInUser=null,LoginContextService.refreshLoginContext(),$scope.$on("loginContextChanged",function(){console.log("Receiving broadcast.");var isLoggedIn=LoginContextService.isLoggedIn();isLoggedIn?($scope.showNavigation=isLoggedIn,$scope.loggedInUser=LoginContextService.loggedInUser(),NavigationService.getNavigation(function(navigation){$scope.modules=navigation},function(){})):($scope.showNavigation=!1,$scope.loggedInUser=null)}),$scope.logout=function(){LoginContextService.logout()}}]),angular.module("woozle").factory("WoozleAuthenticationService",function(Restangular){return{login:function(user,success,failed){{var authentication=Restangular.all("api/Auth/credentials?format=json"),data={UserName:user.username,Password:user.password};authentication.post(data).then(success,failed)}}}}),angular.module("woozle").factory("WoozleLoginContextService",["$rootScope","Restangular","$location",function($rootScope,Restangular,$location){var loginContext={};return loginContext.loggedIn=!1,loginContext.loginUser,loginContext.loginUser=null,loginContext.loginMandator=null,loginContext.isLoggedIn=function(){return this.loggedIn},loginContext.loggedInUser=function(){return this.loginUser},loginContext.loggedInMandator=function(){return this.loginMandator},loginContext.setLoginData=function(user,mandator){console.log(user),this.loggedIn=!0,this.loginUser=user,this.loginMandator=mandator,this.broadcastLoginContextChanged()},loginContext.logout=function(){this.loggedIn=!1,Restangular.one("api/auth","logout").get(),this.broadcastLoginContextChanged()},loginContext.broadcastLoginContextChanged=function(){console.log("broadcast"),$rootScope.$broadcast("loginContextChanged")},loginContext.refreshLoginContext=function(){var that=this;Restangular.one("api/backendLoginContext?format=json").one().then(function(loginContext){console.log("Received LoginContext"),console.log(loginContext),that.setLoginData(loginContext.User,loginContext.Mandator),$location.path("/")},function(){console.log("Could not get a valid loginContext -> Redirect to login page"),$location.path("/login")})},loginContext.getLoginContext=function(success,error){return Restangular.one("api/backendLoginContext?format=json").get().then(success,error)},loginContext}]),angular.module("woozle").factory("WoozleMandatorSelectionService",function(Restangular){return{getAssignedMandators:function(success,error){return Restangular.one("api/mandatorsForSelection?format=json").getList().then(success,error)},selectMandator:function(mandator,success,failed){{var mandatorSelection=Restangular.all("api/mandatorselect?format=json"),data={SelectedMandator:mandator};mandatorSelection.post(data).then(success,failed)}}}}),angular.module("woozle").factory("WoozleNavigationService",function(Restangular){return{getNavigation:function(success,error){return Restangular.one("api/navigation?format=json").getList().then(success,error)}}});